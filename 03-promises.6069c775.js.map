{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAwBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,SAASQ,GAAUT,SAAEA,EAAQC,MAAEA,IAC7BS,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAqBZ,QAAiBC,M,CAGhE,SAASY,GAASb,SAAEA,EAAQC,MAAEA,IAC5BS,EAAAhB,GAASiB,OAAOG,QAAQ,sBAAoBd,QAAeC,M,CAzC7DL,EAAKmB,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAIC,kBAYN,UAAuBhB,MAAEA,EAAKiB,KAAEA,EAAIC,OAAEA,IACpC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC9BrB,EAAcqB,EAAI,EAAGnB,EAAQiB,EAAOE,GAClCC,KAAKZ,GACLa,MAAMT,E,EARXU,CANmB,CACjBtB,MAAOuB,OAAO5B,EAAK6B,SAASxB,MAAMyB,OAClCR,KAAMM,OAAO5B,EAAK6B,SAASP,KAAKQ,OAChCP,OAAQK,OAAO5B,EAAK6B,SAASN,OAAOO,SAItC9B,EAAK+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onCreatePromises);\n\nfunction onCreatePromises(evt) {\n  evt.preventDefault()\n\n   const dataInput = {\n    delay: Number(form.elements.delay.value),\n    step: Number(form.elements.step.value),\n    amount: Number(form.elements.amount.value),\n  }\n\n  cyclePromises(dataInput)\n  form.reset();\n};\n\nfunction cyclePromises({ delay, step, amount }) {\n  for (let i = 0; i < amount; i += 1) {\n     createPromise(i + 1, delay + step * i)\n      .then(onSuccess)\n      .catch(onReject);\n  } \n};\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n   \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nfunction onSuccess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction onReject({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$onSuccess","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onReject","failure","addEventListener","evt","preventDefault","step","amount","i","then","catch","$47d4ff9957288465$var$cyclePromises","Number","elements","value","reset"],"version":3,"file":"03-promises.6069c775.js.map"}